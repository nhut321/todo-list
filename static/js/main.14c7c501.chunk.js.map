{"version":3,"sources":["components/TodoList.js","components/Musicplayer.js","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","getLocal","localStorage","getItem","parse","JSON","jobs","setJobs","job","setJob","input","useRef","className","value","ref","onChange","e","target","onKeyDown","key","prev","newJob","localJob","stringify","setItem","current","focus","onClick","map","v","i","splice","oldJob","removeItem","length","Musicplayer","songs","img","singer","songName","path","currentIndex","setCurrentIndex","currentSong","setCurrentSong","isPlay","setIsplay","cd","audio","play","pause","useEffect","catch","err","src","alt","type","id","name","min","max","count","style","display","console","log","duration","Menu","props","to","App","Fragment","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14c7c501.chunk.js","sourcesContent":["import React, { useState,useRef } from 'react' \r\nimport './todoList.css'\r\n\r\n\r\nexport default function TodoList() {\r\n    const [jobs, setJobs] = useState(() => {\r\n        const getLocal = localStorage.getItem('todoApp')\r\n        const parse = JSON.parse(getLocal)\r\n        return parse ?? []\r\n    })\r\n    const [job, setJob] = useState('')\r\n    \r\n\r\n    let input = useRef()\r\n    const addItem = () => {\r\n        setJobs(prev => {\r\n            const newJob = [...prev,job]\r\n            const localJob = JSON.stringify(newJob)\r\n            localStorage.setItem('todoApp',localJob)\r\n            return newJob\r\n        })\r\n        setJob('')\r\n        input.current.focus()\r\n    }\r\n\r\n    function removeItem(i) {\r\n        jobs.splice(i,1)\r\n        setJobs(prev => {\r\n            const oldJob = [...prev]\r\n            localStorage.setItem('todoApp',JSON.stringify(oldJob))\r\n            return oldJob \r\n        })\r\n    }\r\n\r\n    function onEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            setJobs(prev => {\r\n                const newJob = [...prev,job]\r\n                const localJob = JSON.stringify(newJob)\r\n                localStorage.setItem('todoApp',localJob)\r\n                return newJob\r\n            })\r\n            setJob('')\r\n            input.current.focus()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='todo-app'>\r\n            <div className='header'>\r\n                <h1>Todo App made by Nhựt</h1>\r\n            </div>\r\n            <div className='content'>  \r\n                <div className='input'>\r\n                    <input\r\n                        value={job}\r\n                        ref={input} \r\n                        onChange={(e) => setJob(e.target.value)}\r\n                        onKeyDown={onEnter}\r\n                    />  \r\n                    <button onClick={addItem}>\r\n                        Thêm\r\n                    </button>\r\n                </div>\r\n                <ul className='content-list'>\r\n                   {jobs.map((v,i) => <li key={i}><span>{v}</span><button onClick={() => removeItem(i)}>Xoá</button></li>)}\r\n                </ul>\r\n            </div>\r\n            <div className='footer'>\r\n                <h3>You have <span>{jobs.length}</span> {jobs.length > 1 ? 'jobs' : 'job'}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState,useRef,useEffect } from 'react'\r\nimport './Musicplayer.css'\r\n\r\nexport default function Musicplayer() {\r\n\tconst songs = [\r\n\t\t\t{\r\n\t            img: './img/music/song-1.jpg',\r\n\t            singer: 'Patti',\r\n\t            songName: 'Say you love me',\r\n\t            path: './mp3/say-you-love-me.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-2-1.jpg',\r\n\t            singer: 'Becky G',\r\n\t            songName: 'Sin pijama',\r\n\t            path: './mp3/sin-pijama.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-2.jpg',\r\n\t            singer: 'Jason Mraz',\r\n\t            songName: 'I\\'m yours',\r\n\t            path: './mp3/im-yours.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-3.jpg',\r\n\t            singer: 'Enrique Iglesias',\r\n\t            songName: 'Bailando',\r\n\t            path: './mp3/bailando.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-4.jpg',\r\n\t            singer: 'Enrique Iglesias',\r\n\t            songName: 'El perdon',\r\n\t            path: './mp3/elperdon.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-5.jpg',\r\n\t            singer: 'The Marias',\r\n\t            songName: 'Baby one more time',\r\n\t            path: './mp3/baby-one-more-time.mp3'\r\n\t        },\r\n\t        {\r\n\t            img: './img/music/song-6.jpg',\r\n\t            singer: 'Sting',\r\n\t            songName: 'Shape of my heart',\r\n\t            path: './mp3/shape-of-my-heart.mp3'\r\n\t        }\r\n\t\t]\r\n\tconst [currentIndex, setCurrentIndex] = useState(0)\r\n\tconst [currentSong, setCurrentSong] = useState(songs[currentIndex])\r\n\tconst [isPlay, setIsplay] = useState(false)\r\n\tconst cd = useRef()\r\n\tconst audio = useRef()\r\n\tconst play = useRef()\r\n\tconst pause = useRef()\r\n\r\n\t// let rotate = cd.current.animate([\r\n\t//   { transform: 'rotate(360deg)' }\r\n\t// ], {\r\n\t//   duration: 1000,\r\n\t//   iterations: Infinity\r\n\t// })\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isPlay === true) {\r\n\t\t\taudio.current.play()\r\n\t\t\t.catch( err => 'lỗi rồi nghe')\r\n\t\t}\r\n\t},[currentIndex, isPlay])\r\n\r\n\tconst playBtn = () => {\r\n\t\taudio.current.play()\r\n\t\tplay.current.style.display = 'none'\r\n\t\tpause.current.style.display = 'block'\r\n\t\tconsole.log(audio.current.duration)\r\n\t}\r\n\r\n\tconst pauseBtn = () => {\r\n\t\taudio.current.pause()\r\n\t\tplay.current.style.display = 'block'\r\n\t\tpause.current.style.display = 'none'\r\n\t}\r\n\r\n\tconst nextBtn = () => {\r\n\t\tsetCurrentIndex(v => {\r\n\t\t\tconst count = v + 1\r\n\t\t\tif (count > songs.length -1) {\r\n\t\t\t\tsetCurrentSong(songs[0])\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\t\t\tsetCurrentSong(songs[count])\r\n\t\t\tplay.current.style.display = 'none'\r\n\t\t\tpause.current.style.display = 'block'\r\n\t\t\tsetIsplay(true)\r\n\t\t\treturn count\r\n\t\t})\r\n\r\n\t}\r\n\tconst prevBtn = () => {\r\n\t\tsetCurrentIndex(v => {\r\n\t\t\tlet count = v - 1\r\n\t\t\tif (count < 0) {\r\n\t\t\t\tcount = songs.length -1\r\n\t\t\t}\r\n\r\n\t\t\tsetCurrentSong(songs[count])\r\n\t\t\taudio.current.play()\r\n\t\t\tplay.current.style.display = 'none'\r\n\t\t\tpause.current.style.display = 'block'\r\n\t\t\tsetIsplay(true)\r\n\t\t\treturn count\r\n\t\t})\r\n\t}\r\n\r\n\r\n// \t\t\r\n\t\t\r\n\r\n\treturn (\r\n\t\t<div className='music-player'>\r\n\t\t\t<header>\r\n\t\t\t\t<h2 className='song-name'>\r\n\t\t\t\t\t{currentSong.songName}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className='singer'>\r\n\t\t\t\t\t{currentSong.singer}\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<div className='content'>\r\n\t\t\t\t<div ref={cd} className='content-cd'>\r\n\t\t\t\t\t<img src={currentSong.img} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='content-range'>\r\n\t\t\t\t\t<input className='content-range__run' type=\"range\" id=\"volume\" name=\"volume\"\r\n         min=\"0\" max=\"100\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<audio ref={audio} src={currentSong.path}></audio>\r\n\t\t\t</div>\r\n\t\t\t<footer>\r\n\t\t\t\t<div className='control'>\r\n\t\t\t\t\t<div className='prev' >\r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-circle-left\" onClick={prevBtn}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='play-pause'>\r\n\t\t\t\t\t\t<i ref={pause} style={{display:'none'}} className=\"pause fas fa-pause-circle\" onClick={pauseBtn}></i>\r\n\t\t\t\t\t\t<i ref={play} className=\"play fas fa-play-circle\" onClick={playBtn}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='next'>\r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-circle-right\"  onClick={nextBtn}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n// [\r\n//         {\r\n//             img: './img/song-1.jpg',\r\n//             singer: 'Patti',\r\n//             songName: 'Say you love me',\r\n//             path: './mp3/say-you-love-me.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-2-1.jpg',\r\n//             singer: 'Becky G',\r\n//             songName: 'Sin pijama',\r\n//             path: './mp3/sin-pijama.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-2.jpg',\r\n//             singer: 'Jason Mraz',\r\n//             songName: 'I\\'m yours',\r\n//             path: './mp3/im-yours.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-3.jpg',\r\n//             singer: 'Enrique Iglesias',\r\n//             songName: 'Bailando',\r\n//             path: './mp3/bailando.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-4.jpg',\r\n//             singer: 'Enrique Iglesias',\r\n//             songName: 'El perdon',\r\n//             path: './mp3/elperdon.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-5.jpg',\r\n//             singer: 'The Marias',\r\n//             songName: 'Baby one more time',\r\n//             path: './mp3/baby-one-more-time.mp3'\r\n//         },\r\n//         {\r\n//             img: './img/song-6.jpg',\r\n//             singer: 'Sting',\r\n//             songName: 'Shape of my heart',\r\n//             path: './mp3/shape-of-my-heart.mp3'\r\n//         }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Menu.css'\r\n\r\nexport default function Menu(props) {\r\n\treturn (\r\n\t\t<ul className='nav-menu'>\r\n\t\t\t<li className='active'>\r\n\t\t\t\t<Link to=\"todo-list/\">Todo App</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"todo-list/music\">Music player</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t)\r\n}","import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport './App.css';\nimport TodoList from './components/TodoList'\nimport Musicplayer from './components/Musicplayer'\nimport Menu from './components/Menu'\n\nfunction App() {\n  return (\n      <React.Fragment>\n        <Menu />\n        <Routes>\n            <Route path='todo-list/' element={<TodoList />}/>\n            <Route path='todo-list/music' element={<Musicplayer />}/>\n        </Routes>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}